---
# GitHub Workflow for building and deploying a Hugo site to GitHub Pages
# needs secrets.MRX_DOCKER_USR - account username for docker hub
# needs secrets.MRX_DOCKER_PAT - account access token for docker hub
# needs    vars.MRX_DOCKER_NS  - account namespace for docker hub e.g. mrmxf
name: pr-build-push

on:
  # Runs on push to main branch
  pull_request:
    types: [closed]
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# global environment
env:
  # This overrides the values in clogrc/_cfg.sh
  IMAGE: mrx-demo-svc
  vNODE: 20.15

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages:    write
  id-token: write

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: set the ENV
        run: |
              source clogrc/_cfg.sh
              echo "Deploying website version ($vCODE) from branch ($BRANCH)"
              echo "vCODE=$vCODE"     >> $GITHUB_ENV
              echo "BRANCH=$BRANCH"   >> $GITHUB_ENV
              echo "PROJECT=$PROJECT" >> $GITHUB_ENV
              echo "pushing to hub: ${{ vars.MRX_DOCKER_NS  }}/${{ env.IMAGE  }}:$vCODE"
      -
        name: Bark some context vairables
        uses: mrmxf/action-bark@0.2.05
      -
        name: check the ENV
        run:  |
              echo "pushing to hub: ${{ vars.MRX_DOCKER_NS  }}/${{ env.IMAGE  }}:${{ env.vCODE }}"
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: '${{ github.workspace }}/go.mod'
      -
        name: set up libxml2
        run:  sudo apt-get install libxml2 xsltproc
      -
        name: build
        run:  |
              go build -o mrx-demos
              cd api && go build api || cd ..
              echo "done"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.MRX_DOCKER_USR }}
          password: ${{ secrets.MRX_DOCKER_PAT }}
      -
        name: Build and push - ARM
        uses: docker/build-push-action@v5
        with:
          # important that we use path context otherwise no output!
          context:   .
          push:      true
          tags: |
                "${{ vars.MRX_DOCKER_NS  }}/${{ env.IMAGE  }}-arm:${{ env.vCODE }}"
          platforms: linux/arm64
      -
        name: Build and push - AMD
        uses: docker/build-push-action@v5
        with:
          # important that we use path context otherwise no output!
          context:   .
          push:      true
          tags: |
                "${{ vars.MRX_DOCKER_NS  }}/${{ env.IMAGE  }}-amd:${{ env.vCODE }}"
          platforms: linux/amd64

  hook:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: |
          echo "fire the CI/CD hook to the website signalling no errors"
          curl "https://metarex.media/a/hook/cicd/github/${{ vars.MRX_DOCKER_NS  }}/${{ env.IMAGE  }}-arm:${{ env.vCODE }}"
          echo "fire the CI/CD hook to the website signalling no errors"
          curl "https://metarex.media/a/hook/cicd/github/${{ vars.MRX_DOCKER_NS  }}/${{ env.IMAGE  }}-amd:${{ env.vCODE }}"
